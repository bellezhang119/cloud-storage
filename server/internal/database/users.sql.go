// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: users.sql

package database

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
    email,
    password_hash,
    is_verified,
    verification_token,
    verification_token_expiry,
    created_at,
    updated_at
) VALUES (
    $1, $2, $3, $4, $5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
)
RETURNING id, email, password_hash, is_verified, verification_token, verification_token_expiry, created_at, updated_at
`

type CreateUserParams struct {
	Email                   string
	PasswordHash            string
	IsVerified              bool
	VerificationToken       sql.NullString
	VerificationTokenExpiry sql.NullTime
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.Email,
		arg.PasswordHash,
		arg.IsVerified,
		arg.VerificationToken,
		arg.VerificationTokenExpiry,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.PasswordHash,
		&i.IsVerified,
		&i.VerificationToken,
		&i.VerificationTokenExpiry,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
